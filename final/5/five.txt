The Unix shell will first open a pipe for each command except for the last, by using the OS system call pipe(). The shell will then fork off a child process for each command in the pipeline. Within each child process except the first, it duplicates the first pipe FD (from the pipe() call) to stdin. For all processes except the last, it duplicates the second pipe FD to stdout. These duplications occur using the OS system call dup2().

To account for file redirections, the first command will open the input file, duplicate its FD to stdin, and close the FD. This process repeats for the last command, except it duplicates its FD to stdout. Finally, the child processes will use OS system call exec() to perform the command associated with them. Meanwhile, the shell calls wait() for each child process to finish.